//@Boil(builder)
export interface TestClass {

    field1: Array<string>;
    field2: Array<number>;
    field3: Array<Date>;
    field4: Array<string>;
    filed5: string;
    field6: string;
    field7: string;
}

/*@Boiled-Autogenerated Code*/
export namespace TestClass {
    export class Builder{

        m : any;

        constructor(seed : any={}){
            this.m = seed;
        }

        public field1(field1 : Array<string>) : TestClass.Builder{
            this.m.field1=field1;
            return this;
        }
        public field2(field2 : Array<number>) : TestClass.Builder{
            this.m.field2=field2;
            return this;
        }
        public field3(field3 : Array<Date>) : TestClass.Builder{
            this.m.field3=field3;
            return this;
        }
        public field4(field4 : Array<string>) : TestClass.Builder{
            this.m.field4=field4;
            return this;
        }
        public filed5(filed5 : string) : TestClass.Builder{
            this.m.filed5=filed5;
            return this;
        }
        public field6(field6 : string) : TestClass.Builder{
            this.m.field6=field6;
            return this;
        }
        public field7(field7 : string) : TestClass.Builder{
            this.m.field7=field7;
            return this;
        }
        public build() : TestClass{
            return this.m;
        }
    }
}
export namespace TestClass {
    export function builder() : TestClass.Builder{
        return new TestClass.Builder();
    }
}
export namespace TestClass {
    export function clone(toClone : TestClass) : TestClass.Builder{
        return new TestClass.Builder(toClone);
    }
}
/*@Boiled-Complete*/
